const content = document.getElementById("content");
const returnBtn = document.getElementById("returnButton");
let historyStack = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function loadPage(page, params = {}) {
  try {
    const res = await fetch(`pages/${page}.html`);
    if (!res.ok) throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ${page}.html`);
    const html = await res.text();
    content.innerHTML = html;
  } catch (err) {
    content.innerHTML = `<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${page}</p>`;
    console.error(err);
  }

  if (historyStack.at(-1) !== page && page !== "home") {
    historyStack.push(page);
  }

  toggleBackButton(page);

  // üëá –∂–¥—ë–º –ø–æ–∫–∞ DOM –æ–±–Ω–æ–≤–∏—Ç—Å—è
  await new Promise(requestAnimationFrame);

  initPage(page, params);
}

async function loadHouses() {
  const container = document.querySelector(".listServices");
  if (!container) return;

  container.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ñ–ö...</p>";

  try {
    const res = await fetch("http://localhost:3000/api/houses?filial=333");

    if (!res.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${res.status}`);
    }

    const data = await res.json();

    if (!Array.isArray(data)) {
      console.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
      container.innerHTML = "<p>–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞.</p>";
      return;
    }

    if (data.length === 0) {
      container.innerHTML = "<p>–ñ–ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>";
      return;
    }

    container.innerHTML = data
      .map(
        item => `
        <button class="otherServiceItem">
          <img src="assets/img/square.svg" alt="–∏–∫–æ–Ω–∫–∞">
          ${item.name}
        </button>
      `
      )
      .join("");

    adjustServiceLayout();
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ñ–ö:", err);
    container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –ñ–ö.</p>";
  }
}


// –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
function toggleBackButton(page) {
  if (page === "home") {
    returnBtn.classList.add("hidden");
  } else {
    returnBtn.classList.remove("hidden");
  }
}

// –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
returnBtn.addEventListener("click", () => {
  if (historyStack.length > 1) {
    historyStack.pop();
    const prevPage = historyStack.at(-1);
    loadPage(prevPage);
  } else {
    loadPage("home");
  }
});

// –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
function initPage(page, params) {
  console.log("initPage –≤—ã–∑–≤–∞–Ω –¥–ª—è:", page);
  if (page === "home") {
    const serviceButtons = document.querySelectorAll(".service");
    serviceButtons.forEach(btn => {
      btn.addEventListener("click", async () => {
        const section = btn.textContent.trim();

        await loadPage("otherServices");

        if (section === "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è") {
          loadOtherServices(section);
        } else if (section === "–ö–∞—Å—Å–∞") {
          loadHouses(); // üëà –Ω–æ–≤—ã–π –≤—ã–∑–æ–≤
        } else if (section === "–ü–æ—Å—Ç–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ") {
          loadOtherServices(section);
        }
      });
    });
  }
}


// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
loadPage("home");

// --- API-–∑–∞–ø—Ä–æ—Å –ø–æ–¥—É—Å–ª—É–≥ ---
async function loadOtherServices(sectionName) {
  const container = document.querySelector(".listServices");
  if (!container) return; // –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –µ—â—ë –Ω–µ –ø—Ä–æ–≥—Ä—É–∑–∏–ª—Å—è

  container.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";

  try {
    const res = await fetch(
      `http://localhost:3000/api/services?section=${encodeURIComponent(sectionName)}&filial=333`
    );

    const data = await res.json();

    if (data.length === 0) {
      container.innerHTML = "<p>–ù–µ—Ç —É—Å–ª—É–≥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</p>";
      return;
    }

    container.innerHTML = data
      .map(
        item => `
        <button class="otherServiceItem">
          <img src="assets/img/square.svg" alt="–∏–∫–æ–Ω–∫–∞">
          ${item.name}
        </button>
      `
      )
      .join("");

    adjustServiceLayout();
  } catch (err) {
    console.error(err);
    container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
  }
}
function adjustServiceLayout() {
  const container = document.querySelector(".listServices");
  if (!container) return; // üß© –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã—Ö–æ–¥, –µ—Å–ª–∏ –±–ª–æ–∫–∞ –Ω–µ—Ç

  const items = container.querySelectorAll(".otherServiceItem");
  const count = items.length;

  container.style.display = "grid";
  container.style.gap = "20px";

  if (count <= 4) {
    container.style.gridTemplateColumns = "1fr";
    container.style.gridTemplateRows = `repeat(${count}, 1fr)`;
  } else if (count <= 8) {
    container.style.gridTemplateColumns = "repeat(2, 1fr)";
  } else if (count <= 12) {
    container.style.gridTemplateColumns = "repeat(3, 1fr)";
  } else {
    container.style.gridTemplateColumns = "repeat(4, 1fr)";
  }
}
